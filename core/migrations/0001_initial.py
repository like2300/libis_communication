# Generated by Django 5.2.1 on 2025-05-17 08:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=False, help_text='Designates whether the user is a client.', verbose_name='client status')),
                ('email_verified', models.BooleanField(default=False, help_text='Designates whether the user has verified their email address.', verbose_name='email verified')),
                ('verification_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='verification UUID')),
                ('profile_complete', models.BooleanField(default=False, verbose_name='profile complete')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('sujet', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('traite', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('photo', models.ImageField(upload_to='info/')),
                ('lien_linkedin', models.URLField(blank=True)),
                ('lien_twitter', models.URLField(blank=True)),
                ('lien_github', models.URLField(blank=True)),
                ('lien_website', models.URLField(blank=True)),
                ('lien_email', models.EmailField(blank=True, max_length=254)),
                ('lien_telephone', models.CharField(blank=True, max_length=20)),
                ('lien_facebook', models.URLField(blank=True)),
                ('lien_instagram', models.URLField(blank=True)),
                ('lien_youtube', models.URLField(blank=True)),
                ('lien_tiktok', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'Information',
                'verbose_name_plural': 'Informations',
            },
        ),
        migrations.CreateModel(
            name='MessageAccueil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('media', models.FileField(blank=True, null=True, upload_to='accueil/')),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': "Message d'accueil",
                'verbose_name_plural': "Messages d'accueil",
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/images/')),
                ('categorie', models.CharField(choices=[('visuelle', 'Communication Visuelle'), ('digitale', 'Communication Digitale'), ('audiovisuelle', 'Audiovisuelle'), ('evenementielle', 'Événementielle')], max_length=30, verbose_name='category')),
                ('ordre', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['ordre'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='name')),
                ('poste', models.CharField(max_length=100, verbose_name='position')),
                ('photo', models.ImageField(upload_to='team/')),
                ('bio', models.TextField(verbose_name='biography')),
                ('competences', models.CharField(blank=True, max_length=255, null=True, verbose_name='skills')),
                ('lien_linkedin', models.URLField(blank=True, null=True)),
                ('lien_twitter', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='user account')),
                ('entreprise', models.CharField(help_text='The name of the company.', max_length=100, verbose_name='company')),
                ('profile_complete', models.BooleanField(default=False, verbose_name='profile complete')),
                ('telephone', models.CharField(help_text='Phone number in international format.', max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('secteur_activite', models.CharField(blank=True, max_length=100, null=True, verbose_name='activity sector')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='address')),
                ('date_inscription', models.DateTimeField(auto_now_add=True, verbose_name='signup date')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['-date_inscription'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(unique=True)),
                ('contenu', models.TextField(verbose_name='content')),
                ('date_publication', models.DateField(auto_now_add=True, verbose_name='publication date')),
                ('image', models.ImageField(upload_to='blog/')),
                ('tags', models.CharField(blank=True, max_length=200, null=True)),
                ('en_avant', models.BooleanField(default=False, verbose_name='featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-date_publication'],
            },
        ),
        migrations.CreateModel(
            name='Projets_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('fichier', models.FileField(upload_to='clients/fichiers/')),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='clients/images/')),
                ('video', models.FileField(blank=True, null=True, upload_to='clients/videos/')),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='core.client')),
            ],
            options={
                'verbose_name': 'Projets_user',
                'verbose_name_plural': 'Projets_user',
                'ordering': ['-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(verbose_name='description')),
                ('image', models.ImageField(upload_to='portfolio/images/', verbose_name='image')),
                ('video', models.FileField(blank=True, null=True, upload_to='portfolio/videos/', verbose_name='video')),
                ('date', models.DateField(verbose_name='project date')),
                ('resultat', models.TextField(blank=True, null=True, verbose_name='result')),
                ('categorie', models.CharField(choices=[('visuelle', 'Visual Communication'), ('digitale', 'Digital Communication'), ('audiovisuelle', 'Audiovisual'), ('evenementielle', 'Event')], max_length=100, verbose_name='category')),
                ('lien', models.URLField(blank=True, null=True, verbose_name='link')),
                ('en_avant', models.BooleanField(default=False, verbose_name='featured')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('services', models.ManyToManyField(blank=True, to='core.service', verbose_name='services')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.client', verbose_name='client')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-date'],
                'constraints': [models.UniqueConstraint(fields=('slug',), name='unique_project_slug')],
            },
        ),
    ]
